#!/bin/bash
# The script is called from Makefile
echo "Usage: make [target]"
echo ""
echo "Source code formatting, linting and testing:"
echo "  code.check                     - Run all code quality checks and tests"
echo "  code.format                    - Format code with isort and black"
echo "  code.lint                      - Run all linters"
echo "  code.test                      - Run tests"
echo "  code.cov                       - Run tests with coverage"
echo "  code.covrep                    - Generate coverage report"
echo ""
echo "Docker Compose controls:"
echo "  compose.build.docker           - Build Docker images using Docker environment"
echo "  compose.build.local            - Build Docker images using local environment"
echo "  compose.check-dotenv           - Check .env file variables in container"
echo "  compose.create_dotenv.docker   - Create .env file for Docker environment"
echo "  compose.create_dotenv.local    - Create .env file for local environment"
echo "  compose.down                   - Stop and remove containers"
echo "  compose.logs                   - View logs (select from list)"
echo "  compose.postgres.dotenv.docker - Create and check .env file for Docker"
echo "  compose.postgres.dotenv.local  - Create and check .env file for local"
echo "  compose.postgres.down          - Stop the db_postgres service"
echo "  compose.postgres.up.docker     - Start the db_postgres service for Docker"
echo "  compose.postgres.up.local      - Start the db_postgres service for local"
echo "  compose.prune                  - Remove all unused containers, networks, images, and volumes"
echo "  compose.ps                     - List running containers"
echo "  compose.rmvolumes              - Remove all Docker volumes"
echo "  compose.shell                  - Run interactive shell in a container (select from list)"
echo "  compose.up.new                 - Build and start containers"
echo "  compose.up.old                 - Start containers without building"
echo ""
echo "Alembic database migrations:"
echo "  alembic.async                  - Initialize alembic for async setup"
echo "  alembic.migration              - Create a new migration"
echo "                                   Usage: make alembic.migration message='your message'"
echo "  alembic.migrate                - Run all pending migrations"
echo "  alembic.downgrade.prev         - Downgrade to the previous migration"
echo "  alembic.downgrade.base         - Downgrade to the base migration"
echo ""